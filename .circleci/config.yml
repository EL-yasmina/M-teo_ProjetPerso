version: 2.1

jobs:
  test:
    docker:
      - image: cimg/python:3.9  # Utiliser une image Docker avec Python
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install pytest pytest-mock
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            pytest
      - run:
          name: Check code quality
          command: |
            . venv/bin/activate
            pip install flake8 flake8-html
            flake8 --format=html --htmldir=flake8-report
      - store_artifacts:
          path: flake8-report
          destination: flake8-report

  build:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Build artifact
          command: |
            . venv/bin/activate
            # Commandes pour construire l'artefact de votre application, par exemple:
            # pyinstaller --onefile app.py
            touch example.txt
      - store_artifacts:
          path: example.txt

  deploy:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout
      - run:
          name: Deploy application
          command: |
            # Commandes pour déployer votre application, par exemple:
            # scp example.txt user@yourserver:/path/to/deploy/
            echo "Déploiement de l'application"

workflows:
  version: 2
  example:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy:
          requires:
            - build
